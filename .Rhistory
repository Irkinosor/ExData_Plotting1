pollutantmean("./coursera/specdata","sulfate",id = 1:10)
?list
a <- list()
length(a) <- 3
a <- list(,length = 4)
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
head(warmings())
head(warnings())
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
class(filedf[,pollutant])
head(data[i])
head(filedf[,pollutant])
data[i] <- c(filedf[,pollutant])
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
source('~/.active-rstudio-document', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
?dir()
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
source('~/.active-rstudio-document', echo=TRUE)
?tapply
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
mean(data[,pollutant],na.rm = TRUE)
source('C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/pollutantmean.r', echo=TRUE)
pollutantmean("./coursera/specdata","sulfate",id = 1:10)
pollutantmean("./coursera/specdata","nitrate",70:72)
pollutantmean("./coursera/specdata","nitrate",23)
?count
complete.cases
?complete.cases
?do.call
integer(3)
?data.frame
?read.csv
?sprintf
?read.csv
fileGDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileEdu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileGDP,"./coursera/gdp.csv",method = "curl")
download.file(fileEdu, "./coursera/edu.csv",method = "curl")
gdp <- read.csv("./coursera/gdp.csv")
edu <- read.csv("./coursera/edu.csv")
View(gdp)
View(edu)
?match
?merge
name(edu)
names(edu)
intersection(names(gdp),names(edu))
intersect(names(gdp),names(edu))
names(gdp$X) <- "CountryCode"
intersect(names(gdp),names(edu))
names(gdp$X)
names(gdp$CountryCode)
names(gdp)
names(gdp)[1]
names(gdp)[1] <- "CountryCode"
names(gdp)[1]
intersect(names(gdp),names(edu))
gdp-edu <- merge(gdp,edu,by = "CountryCode")
gdp.edu <- merge(gdp,edu,by = "CountryCode")
View(gdp.edu)
?sort
gdp <- read.csv("./coursera/gdp.csv",na.string = C("NA",""))
gdp <- read.csv("./coursera/gdp.csv",na.strings = c("NA",""))
edu <- read.csv("./coursera/edu.csv",na.strings = c("NA",""))
names(gdp)[1] <- "CountryCode"
gdp.edu <- merge(gdp,edu,by = "CountryCode")
library(Plyr)
library(plyr)
gdp.edu <- arrange(gdp.edu,"Gross.domestic.product.2012")
gdp.edu <- arrange(gdp.edu,desc(gdp.edu$Gross.domestic.product.2012"))
)
)
))
gdp.edu <- arrange(gdp.edu,desc(gdp.edu$Gross.domestic.product.2012"))
gdp.edu <- arrange(gdp.edu,desc(gdp.edu$Gross.domestic.product.2012))
View(gdp.edu)
gdp.edu[13,1]
class(gdp.edu$Gross.domestic.product.2012)
?as.numeric
gdp.edu$Gross.domestic.product.2012 <- as.numeric(gdp.edu$Gross.domestic.product.2012)
gdp.edu <- arrange(gdp.edu,desc(gdp.edu$Gross.domestic.product.2012))
View(gdp.edu)
gdp.edu[13,1]
?order
gdp.edu <- merge(gdp,edu,by = "CountryCode")
gdp.edu$Gross.domestic.product.2012 <- as.numeric(gdp.edu$Gross.domestic.product.2012)
gdp.edu <- gdp.edu[order(gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(gdp.edu)
library(plyr)
?ldply
?ldply
?Reduce
?join
library(plyr)
?join
?merge
gdp <- read.csv("./coursera/gdp.csv",na.strings = c("NA",""))
edu <- read.csv("./coursera/edu.csv",na.strings = c("NA",""))
names(gdp)[1] <- "CountryCode"
gdp.edu <- merge(gdp,edu,by = "CountryCode",all = FALSE)
View(gdp.edu)
gdp.edu$Gross.domestic.product.2012 <- as.numeric(gdp.edu$Gross.domestic.product.2012)
gdp.edu <- gdp.edu[order(gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(gdp.edu)
first <- ddply(baseball, "id", summarise, first = min(year))
View(first)
gdp.edu <- join(gdp,edu,by = "CountryCode",type = "inner")
View(gdp.edu)
View(gdp)
?intersec
?intersect
inter <- intersect(gdp$CountryCode,edu$CountryCode)
is.na(inter)
gdp.edu <- join(gdp,edu,by = "CountryCode",type = "inner",match = "first")
View(gdp.edu)
gdp.edu <- join(gdp,edu,by = "CountryCode",type = "inner",match = "first")
View(gdp.edu)
gdp.edu$Gross.domestic.product.2012 <- as.numeric(gdp.edu$Gross.domestic.product.2012)
gdp.edu <- gdp.edu[order(gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(gdp.edu)
gdp.edu <- join(gdp,edu,by = "CountryCode",type = "inner",match = "first")
gdp.edu$Gross.domestic.product.2012 <- as.numeric(gdp.edu$Gross.domestic.product.2012)
gdp.edu <- gdp.edu[,!is.na(gdp.edu$Gross.domestic.product.2012)]
?is.na
is.na(c(1,2,NA))
gdp.edu <- gdp.edu[!is.na(gdp.edu$Gross.domestic.product.2012),]
View(gdp.edu)
gdp.edu <- gdp.edu[order(gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(gdp.edu)
gdp.edu <- join(gdp,edu,by = "CountryCode",type = "inner")
View(gdp.edu)
gdp.edu <- gdp.edu[!is.na(gdp.edu$Gross.domestic.product.2012),]
View(gdp.edu)
gdp.edu <- join(gdp,edu,by = "CountryCode",type = "inner")
tidy.gdp.edu <- gdp.edu[!is.na(gdp.edu$Gross.domestic.product.2012),]
View(gdp.edu)
tidy.gdp.edu$Gross.domestic.product.2012 <- as.numeric(tidy.gdp.edu$Gross.domestic.product.2012)
gdp.edu <- gdp.edu[order(gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(tidy.gdp.edu)
tidy.gdp.edu[13,1]
?complete.cases
f <- gl(High income: OECD, High income: nonOECD)
f <- gl("High income: OECD", "High income: nonOECD")
str(tidy.gdp.edu$Income.Group)
tapply(tidy.gdp.edu$Gross.domestic.product.2012,tidy.gdp.edu$Income.Group,mean)
mean(tidy.gdp.edu$Gross.domestic.product.2012[tidy.gdp.edu$Income.Group == High income: OECD,])
mean(tidy.gdp.edu$Gross.domestic.product.2012[tidy.gdp.edu$Income.Group == "High income: OECD",])
mean(tidy.gdp.edu$Gross.domestic.product.2012[tidy.gdp.edu$Income.Group == "High income: OECD"])
View(tidy.gdp.edu)
tidy.gdp.edu$Gross.domestic.product.2012 <- as.numeric(tidy.gdp.edu$Gross.domestic.product.2012)
tidy.gdp.edu <- tidy.gdp.edu[order(tidy.gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(tidy.gdp.edu)
tidy.gdp.edu <- gdp.edu[!is.na(gdp.edu$Gross.domestic.product.2012),]
View(tidy.gdp.edu)
str(tidy.gdp.edu$Gross.domestic.product.2012)
tidy.gdp.edu <- complete.cases(gdp.edu)
str(tidy.gdp.edu$Gross.domestic.product.2012)
tidy.gdp.edu <- gdp.edu(complete.cases(gdp.edu$Gross.domestic.product.2012))
tidy.gdp.edu <- gdp.edu[complete.cases(gdp.edu$Gross.domestic.product.2012),]
str(tidy.gdp.edu$Gross.domestic.product.2012)
?as.numeric
tidy.gdp.edu$Gross.domestic.product.2012 <- as.interger(as.character(tidy.gdp.edu$Gross.domestic.product.2012))
tidy.gdp.edu$Gross.domestic.product.2012 <- as.integer(as.character(tidy.gdp.edu$Gross.domestic.product.2012))
str(tidy.gdp.edu$Gross.domestic.product.2012)
as.character("")
as.integer(as.character(""))
as.numeric("")
tidy.gdp.edu <- tidy.gdp.edu[order(tidy.gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(tidy.gdp.edu)
tidy.gdp.edu$Gross.domestic.product.2012 <- as.integer(as.character(tidy.gdp.edu$Gross.domestic.product.2012))
tidy.gdp.edu <- gdp.edu[complete.cases(gdp.edu$Gross.domestic.product.2012),]
tidy.gdp.edu <- tidy.gdp.edu[order(tidy.gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(tidy.gdp.edu)
str(tidy.gdp.edu$Gross.domestic.product.2012)
gdp.edu$Gross.domestic.product.2012 <- as.integer(as.character(gdp.edu$Gross.domestic.product.2012))
tidy.gdp.edu <- gdp.edu[complete.cases(gdp.edu$Gross.domestic.product.2012),]
View(tidy.gdp.edu)
tidy.gdp.edu <- tidy.gdp.edu[order(tidy.gdp.edu$Gross.domestic.product.2012,decreasing = TRUE),]
View(tidy.gdp.edu)
as.integer(as.character("ranking"))
as.numeric("ranking")
tapply(tidy.gdp.edu$Gross.domestic.product.2012,tidy.gdp.edu$Income.Group,mean)
?quantile
seq(0,1,.25)
seq(0,1,.20)
groiuped <- quantile(tidy.gdp.edu$Gross.domestic.product.2012,seq(0,1,.20))
grouped <- quantile(tidy.gdp.edu$Gross.domestic.product.2012,seq(0,1,.20))
grouped
?table
table(tidy.gdp.edu$Income.Group,grouped)
grouped2 <- cut(tidy.gdp.edu$Income.Group,grouped,include.lowest= TRUE)
grouped2 <- cut(tidy.gdp.edu$Gross.domestic.product.2012,5,include.lowest= TRUE)
table(grouped2)
table(c(grouped2,tidy.gdp.edu$Income.Group))
table(grouped2,tidy.gdp.edu$Income.Group)
table(grouped,tidy.gdp.edu$Income.Group)
?<<-
? "<<-"
?vector
?stop
?transform
?strtime
?strptime
?read.table
?gsource
?gsource()
??zlig
manipulate(
plot(cars, xlim=c(0,x.max)),
x.max=slider(15,25))
library(manipulate)
manipulate(
plot(cars, xlim=c(0,x.max)),
x.max=slider(15,25))
manipulate(
barplot(as.matrix(longley[,factor]),
beside = TRUE, main = factor),
factor = picker("GNP", "Unemployed", "Employed"))
manipulate(
boxplot(Freq ~ Class, data = Titanic, outline = outline),
outline = checkbox(FALSE, "Show outliers"))
?rbind
?readlines
?readLines
?as before
?<as before>
?scan
setwd("~/WorkSpace/R/exploratory data analysis/exdata-data-household_power_consumption")
?readTable
?readtable
getwd()
setwd("C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/rprog-ProgAssignment3")
setwd("C:/Users/anselm/Google Drive/Research/WorkSpace/R/coursera/exploratory data analysis")
fileurl <- "C:/Users/anselm/Documents/WorkSpace/R/exploratory data analysis/exdata-data-household_power_consumption/household_power_consumption.txt"
dta <- read.table(fileurl,header=TRUE, sep=";",nrows =3)
names(dta)
classes <- sapply(dta,class)
classes
?as.Date
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
dates <- as.Date(dates, "%m/%d/%y")
dates
class(dates)
class(dates[1])
?as.Poxit
?as.PoSIXlt
dta$Date <- as.character(dta$Date)
dta$Time <- as.character(dta$Time)
classes <- sapply(dta,class)
classes
data <-read.table(fileurl,header =TRUE,seq=";",skip = 66636,nrows = 40323, colCalsees = classes,na.strings = C("?"))
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colCalsees = classes, na.strings = C("?"))
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colCalsses = classes, na.strings = C("?"))
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colClasses = classes, na.strings = C("?"))
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colClasses = classes, na.strings = C("\?"))
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colClasses = classes, na.strings = C("\\?"))
a <- ?
''
a
a <- "?"
a
class(A)
class(a)
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colClasses = classes, na.strings = C(?))
a <- c(?)
a <- c(\\?)
a <- c(\?)
a <- c("\?")
a <- c("\\?")
class(a)
a
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colClasses = classes)
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66636, nrows = 40323, colClasses = classes, na.strings = C("\\?"))
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66637, nrows = 40322, colClasses = classes)
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66637, nrows = 40322, colClasses = as.Character())
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66637, nrows = 40322, colClasses = "character")
names(data)
data <-read.table(fileurl,header =TRUE, sep=";", skip = 66637, nrows = 40322, colClasses = "character", col.names = names(dta))
dim(data)
names(data)
data <-read.table(fileurl, sep=";", skip = 66637, nrows = 40322, colClasses = "character", col.names = names(dta))
?write
write(data,"electric")
write(data,file = "electric")
class(data)
write.table(data,"electicHouse")
sum(is.na(data[,3]))
sum(data[,3] == "?")
as.numeric("?")
data[,3:9]<- as.numeric(data[,3:9])
data[,3:9]<- sapply(data[,3:9],as.numeric)
?hist
hist(data$Global_active_power,breaks = 50, main = "Global Active Power",
xlab = "Global Active Power (kilowatt)")
hist(na.omit(data$Global_active_power),breaks = 50, main = "Global Active Power",
xlab = "Global Active Power (kilowatt)",col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
data$Date <-as.Date(data$Date, format='%d/%m/%Y')
power <- data[data$Date %in%  as.Date(c('2007-02-01','2007-02-02')), ]
power[,3:9]<- suppressWarnings(sapply(power[,3:9],as.numeric))
hist(na.omit(power$Global_active_power),breaks = 50, main = "Global Active Power",
xlab = "Global Active Power (kilowatt)",col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
setwd("C:/Users/anselm/Git Local/ExData_Plotting1")
dev.copy(png, file = "plot1.png")
dev.off()
plot(power$Global_active_power~power$Date, ylab = "Global Active Power")
newDate <- strptime(paste(object$Date, object$Time, sep=" "),
format="%d/%m/%Y %H:%M:%S")
newDate <- strptime(paste(power$Date, power$Time, sep=" "),
format="%d/%m/%Y %H:%M:%S")
power$fullDate <- strptime(paste(power$Date, power$Time, sep=" "),
format="%d/%m/%Y %H:%M:%S")
plot(power$Global_active_power~power$Date, ylab = "Global Active Power")
str(fullDate)
str(power$fullDate)
data <-read.table(fileurl, sep=";", skip = 66637, nrows = 40322,
colClasses = "character", col.names = names(data))
data$Date <-strptime(paste(data$Date, data$Time, sep=" "),
format="%d/%m/%Y %H:%M:%S")
str(data$Date)
power <- data[data$Date %in%  as.Date(c('2007-02-01','2007-02-02')), ]
data <-read.table(fileurl, sep=";", skip = 66637, nrows = 40322,
colClasses = "character", col.names = names(data))
Date1 <-as.Date(data$Date, format='%d/%m/%Y')
power <- data[Date1 %in%  as.Date(c('2007-02-01','2007-02-02')), ]
power$Date <-strptime(paste(data$Date, data$Time, sep=" "),
format="%d/%m/%Y %H:%M:%S")
power$fullDate <-strptime(paste(power$Date, power$Time, sep=" "),
format="%d/%m/%Y %H:%M:%S")
power[,3:9]<- suppressWarnings(sapply(power[,3:9],as.numeric))
plot(power$Global_active_power~power$fullDate, ylab = "Global Active Power")
str(fullDate)
str(power$fullDate)
plot(power$Global_active_power, power$fullDate, ylab = "Global Active Power")
plot(power$fullDate,power$Global_active_power, ylab = "Global Active Power")
?plot
plot(power$fullDate,power$Global_active_power, ylab = "Global Active Power",
type ="l" )
plot(power$fullDate,power$Global_active_power, xlab = "",ylab = "Global Active Power",
type ="l" )
dev.copy(png, file = "plot2.png")
dev.off()
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "bleu")
?color()
?color
?colour
color()
colour()
colors()
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
dev.copy(png, file = "plot3.png")
dev.off()
legend(c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
?legend
legend('topright',c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend('topright',col = c("black","blue","red"))
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black","blue","red"))
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black","blue","red"))
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black","blue","red"))
dev.copy(png, file = "plot3.png")
dev.off()
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
lty = 1,col = c("black","blue","red"))
dev.copy(png, file = "plot3.png")
dev.off()
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
lty = 1,col = c("black","blue","red"))
dev.copy(png, file = "plot3.png")
dev.off()
plot(power$fullDate,power$Global_active_power, xlab = "",ylab = "Global Active Power(kilowatt)",
type ="l" )
dev.copy(png, file = "plot2.png")
dev.off()
#making fourth plot
par(mfrow = c(2,2))
#first plot
plot(power$fullDate,power$Global_active_power, xlab = "",ylab = "Global Active Power(kilowatt)",
type ="l" )
#second plot
plot(power$fullDate,power$Voltage, xlab = "datetime",ylab = "Global Active Power(kilowatt)",
type ="l" )
#third plot
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
lty = 1,col = c("black","blue","red"))
#fourth plot
plot(power$fullDate,power$Global_reactive_power, xlab = "datetime",ylab = "Global Active Power(kilowatt)",
type ="l" )
#making fourth plot
par(mfrow = c(2,2))
#first plot
plot(power$fullDate,power$Global_active_power, xlab = "",ylab = "Global Active Power",
type ="l" )
#second plot
plot(power$fullDate,power$Voltage, xlab = "datetime",ylab = "Voltage",
type ="l" )
#third plot
plot(power$fullDate,power$Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(power$fullDate,power$Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(power$fullDate,power$Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
lty = 1,col = c("black","blue","red"))
#fourth plot
plot(power$fullDate,power$Global_reactive_power, xlab = "datetime",ylab = "Global reactive Power",
type ="l" )
mar()
par(mar())
#making fourth plot
par(mfrow = c(2,2), mar = c(4,4,2,1))
#first plot
plot(power$fullDate,power$Global_active_power, xlab = "",ylab = "Global Active Power",
type ="l" )
#second plot
plot(power$fullDate,power$Voltage, xlab = "datetime",ylab = "Voltage",
type ="l" )
with(power,{
#third plot
plot(fullDate,Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(fullDate,Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(fullDate,Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
lty = 1,col = c("black","blue","red"))
})
#fourth plot
plot(power$fullDate,power$Global_reactive_power, xlab = "datetime",ylab = "Global reactive Power",
type ="l" )
par(mfrow = c(2,2), mar = c(4,3,2,1))
#first plot
plot(power$fullDate,power$Global_active_power, xlab = "",ylab = "Global Active Power",
type ="l" )
#second plot
plot(power$fullDate,power$Voltage, xlab = "datetime",ylab = "Voltage",
type ="l" )
with(power,{
#third plot
plot(fullDate,Sub_metering_1, xlab = "",ylab = "Energy sub metering",
type ="l" )
lines(fullDate,Sub_metering_2, xlab = "",ylab = "Energy sub metering",
type ="l",col = "red")
lines(fullDate,Sub_metering_3, xlab = "",ylab = "Energy sub metering",
type ="l",col = "blue")
legend('topright',legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
lty = 1,col = c("black","blue","red"))
})
#fourth plot
plot(power$fullDate,power$Global_reactive_power, xlab = "datetime",ylab = "Global reactive Power",
type ="l" )
dev.copy(png, file = "plot4.png")
dev.off()
?dev.copy
?png
